// Calculating nCr mod p
#include<stdio.h>
#define p 1000000007
long long int fact(long long int n)
{
    long long int i,f=1;
    for(i=1;i<=n;i++)
    {
        f=(f*(i%p))%p;
    }
    return f;
}
long long int inverse(long long int b,long long int pow)
{
    long long int t;
    if(pow==0)return 1;
    if(pow==1)return b;
    t=inverse(b,pow/2);
    t=(t*t)%p;
    if(pow%2==1)t=(t*b)%p;
    return t;
}
long long int nCr(long long int n, long long int r)
{
    return ((fact(n)*inverse(fact(r),p-2))%p*inverse(fact(n-r),p-2))%p;
}
int main()
{
    long long int t,n,r;
    scanf("%lld",&t);
    while(t--)
    {
        scanf("%lld%lld",&n,&r);
        printf("%lld\n",nCr(n,r));
    }
    return 0;
}
